<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Kf8H7o+Ggqz1DPkAAAAASUVORK5CYII=
</value>
  </data>
</root>