<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BirthdateLabel" xml:space="preserve">
    <value>Birthdate</value>
  </data>
  <data name="ConfirmExitGameMessage" xml:space="preserve">
    <value>Do you really want to exit the game?</value>
  </data>
  <data name="ConformExitGame" xml:space="preserve">
    <value>Exit Confirmation</value>
  </data>
  <data name="CreateGameButton" xml:space="preserve">
    <value>Create Game</value>
  </data>
  <data name="Game.AnotherTurn" xml:space="preserve">
    <value>It's the other player's turn</value>
  </data>
  <data name="Game.AnswerError" xml:space="preserve">
    <value>Error while submitting answer</value>
  </data>
  <data name="Game.CreateError" xml:space="preserve">
    <value>Failed to create game</value>
  </data>
  <data name="Game.Draw" xml:space="preserve">
    <value>Draw</value>
  </data>
  <data name="Game.Finished" xml:space="preserve">
    <value>The game is already finished</value>
  </data>
  <data name="Game.IsNotFound" xml:space="preserve">
    <value>Game not found</value>
  </data>
  <data name="Game.JoinButton" xml:space="preserve">
    <value>Join</value>
  </data>
  <data name="Game.JoinError" xml:space="preserve">
    <value>Error joining game</value>
  </data>
  <data name="Game.LoadCategoryError" xml:space="preserve">
    <value>Failed to load categories</value>
  </data>
  <data name="Game.LoadError" xml:space="preserve">
    <value>Failed to load game</value>
  </data>
  <data name="Game.LoadQuestionsError" xml:space="preserve">
    <value>Failed to load questions</value>
  </data>
  <data name="Game.NotStarted" xml:space="preserve">
    <value>The second player hasn't joined yet</value>
  </data>
  <data name="Game.PasTurnError" xml:space="preserve">
    <value>Error passing turn</value>
  </data>
  <data name="Game.Play" xml:space="preserve">
    <value>Play</value>
  </data>
  <data name="Game.PlayerWon" xml:space="preserve">
    <value>Player won</value>
  </data>
  <data name="Game.SamePlayers" xml:space="preserve">
    <value>You cannot join your own game</value>
  </data>
  <data name="Game.SelectCategory" xml:space="preserve">
    <value>Select a category</value>
  </data>
  <data name="Game.StateError" xml:space="preserve">
    <value>Could not join game</value>
  </data>
  <data name="Join.UpdateError" xml:space="preserve">
    <value>Failed to load games</value>
  </data>
  <data name="Join.UpdateGames" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="JoinGameButton" xml:space="preserve">
    <value>Join a Game</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="leaderboard" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>assets\images\leaderboard.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Leaderboard.Answers" xml:space="preserve">
    <value>correct answers</value>
  </data>
  <data name="Leaderboard.Label" xml:space="preserve">
    <value>Leaderboard</value>
  </data>
  <data name="Login.BtnLogin" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Login.EmptyUsername" xml:space="preserve">
    <value>Please enter a username</value>
  </data>
  <data name="Login.Error" xml:space="preserve">
    <value>Error while logging in</value>
  </data>
  <data name="Login.NoAccount" xml:space="preserve">
    <value>No account?</value>
  </data>
  <data name="Login.NonExistingUser" xml:space="preserve">
    <value>User does not exist</value>
  </data>
  <data name="Login.Success" xml:space="preserve">
    <value>Login successful</value>
  </data>
  <data name="Login.WrongPassword" xml:space="preserve">
    <value>Incorrect password</value>
  </data>
  <data name="Notification.Error" xml:space="preserve">
    <value>Error Notification</value>
  </data>
  <data name="Notification.Info" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="Notification.Success" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="Password.HasLowerChar" xml:space="preserve">
    <value>Password must contain at least one lowercase letter</value>
  </data>
  <data name="Password.HasNumber" xml:space="preserve">
    <value>Password must contain at least one number</value>
  </data>
  <data name="Password.HasSymbols" xml:space="preserve">
    <value>Password must contain at least one special character</value>
  </data>
  <data name="Password.HasUpperChar" xml:space="preserve">
    <value>Password must contain at least one uppercase letter</value>
  </data>
  <data name="Password.IsLatinOnly" xml:space="preserve">
    <value>Password must contain only Latin letters</value>
  </data>
  <data name="Password.MinMaxChar" xml:space="preserve">
    <value>Password must be between 8 and 20 characters</value>
  </data>
  <data name="PasswordLabel" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Player1Label" xml:space="preserve">
    <value>Player 1</value>
  </data>
  <data name="Player2Label" xml:space="preserve">
    <value>Player 2</value>
  </data>
  <data name="Register.EmptyPassword" xml:space="preserve">
    <value>Please enter a password</value>
  </data>
  <data name="Register.EmptyRepeatPassword" xml:space="preserve">
    <value>Please confirm your password</value>
  </data>
  <data name="Register.EmptyUsername" xml:space="preserve">
    <value>Please enter a username</value>
  </data>
  <data name="Register.Error" xml:space="preserve">
    <value>Error registering account</value>
  </data>
  <data name="Register.ExistingUser" xml:space="preserve">
    <value>User already exists</value>
  </data>
  <data name="Register.HaveAnAccount" xml:space="preserve">
    <value>Already have an account?</value>
  </data>
  <data name="Register.InvalidAge" xml:space="preserve">
    <value>You must be at least 4 years old</value>
  </data>
  <data name="Register.InvalidRepeatPassword" xml:space="preserve">
    <value>Passwords must match</value>
  </data>
  <data name="Register.Successful" xml:space="preserve">
    <value>Registration successful</value>
  </data>
  <data name="RegisterButton" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RepeatPasswordLabel" xml:space="preserve">
    <value>Repeat Password</value>
  </data>
  <data name="UsernameLabel" xml:space="preserve">
    <value>Username</value>
  </data>
</root>